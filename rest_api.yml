openapi: 3.0.0
info:
  title: Social Network for Travelers API
  version: 1.0.0
  description: API documentation for a social network platform designed for travelers.

tags:
  - name: Users
  - name: Posts
  - name: Reactions
  - name: Comments
  - name: Subscriptions
  - name: Locations

servers:
  - url: http://api.travelnetwork.com/v1
    description: Production server

paths:
  /users:
    get:
      summary: Search for users
      tags:
        - Users
      parameters:
        - in: query
          name: first_name
          schema:
            type: string
          description: First name of the user to search for
        - in: query
          name: last_name
          schema:
            type: string
          description: Last name of the user to search for
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: per_page
          schema:
            type: integer
            default: 10
          description: Number of items per page
      responses:
        '200':
          description: List of users matching the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '500':
          description: Server error
  /users/{user_id}:
    get:
      summary: Get user details
      tags:
        - Users
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user
      responses:
        '200':
          description: User details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
        '500':
          description: Server error

  /posts/user/{user_id}/:
    get:
      summary: Get posts by a user
      tags:
        - Posts
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: per_page
          schema:
            type: integer
            default: 10
          description: Number of items per page
      responses:
        '200':
          description: List of posts by the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        '400':
          description: Bad Request
        '500':
          description: Server error

  /posts/:
    post:
      summary: Create a new post
      tags:
        - Posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: Post created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad Request
        '422':
          description: Validation exception
        '500':
          description: Server error
    get:
      summary: Get user's feed
      tags:
        - Posts
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: per_page
          schema:
            type: integer
            default: 10
          description: Number of items per page
      responses:
        '200':
          description: List of posts from users the current user is subscribed to
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        '400':
          description: Bad Request
        '500':
          description: Server error

  /posts/{post_id}:
    get:
      summary: Get post details
      tags:
        - Posts
      parameters:
        - in: path
          name: post_id
          schema:
            type: integer
          required: true
          description: ID of the post
      responses:
        '200':
          description: Post details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad Request
        '500':
          description: Server error
    put:
      summary: Update post
      description: Method updates post for user
      tags:
        - Posts
      parameters:
        - in: path
          name: post_id
          schema:
            type: integer
          required: true
          description: ID of the post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '200':
          description: Post updated successfull
        '400':
          description: Bad Request
        '422':
          description: Validation exception
        '500':
          description: Server error
    delete:
      summary: Delete post
      description: Method deletes post
      tags:
        - Posts
      parameters:
        - in: path
          name: post_id
          schema:
            type: integer
          required: true
          description: ID of the post
      responses:
        '200':
          description: Post deleted successfull
        '400':
          description: Bad Request
        '500':
          description: Server error

  /posts/{post_id}/ratings:
    post:
      summary: Rate a post
      tags:
        - Reactions
      parameters:
        - in: path
          name: post_id
          schema:
            type: integer
          required: true
          description: ID of the post to rate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rating'
      responses:
        '200':
          description: Rating submitted successfully
        '400':
          description: Bad Request
        '422':
          description: Validation exception
        '500':
          description: Server error
    delete:
      summary: Unrate a post
      tags:
        - Reactions
      parameters:
        - in: path
          name: post_id
          schema:
            type: integer
          required: true
          description: ID of the post to rate
      responses:
        '200':
          description: Rating unsubmitted successfully
        '400':
          description: Bad Request
        '422':
          description: Validation exception
        '500':
          description: Server error

  /posts/{post_id}/comments:
    get:
      summary: Get comments for a post
      tags:
        - Comments
      parameters:
        - in: path
          name: post_id
          schema:
            type: integer
          required: true
          description: ID of the post
      responses:
        '200':
          description: List of comments for the post
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        '400':
          description: Bad Request
        '500':
          description: Server error
    post:
      summary: Add a comment to a post
      tags:
        - Comments
      parameters:
        - in: path
          name: post_id
          schema:
            type: integer
          required: true
          description: ID of the post to comment on
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          description: Comment added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Bad Request
        '422':
          description: Validation exception
        '500':
          description: Server error

  /comments/{comment_id}:
    get:
      summary: Get specific comment
      description: Method gets single comment for the authenticated user
      tags:
        - Comments
      parameters:
        - in: path
          name: comment_id
          schema:
            type: integer
          required: true
          description: ID of the comment
      responses:
        '200':
          description: Get comment successfull
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Server error
    delete:
      summary: Delete comment
      tags:
        - Comments
      parameters:
        - in: path
          name: comment_id
          schema:
            type: integer
          required: true
          description: ID of the comment
      responses:
        '200':
          description: Comment deleted successfull
        '400':
          description: Bad Request
        '500':
          description: Server error

  /users/{user_id}/subscriptions:
    post:
      summary: Subscribe to a user
      tags:
        - Subscriptions
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user to subscribe to
      responses:
        '201':
          description: Subscription created successfully
        '400':
          description: Bad Request
        '500':
          description: Server error
    delete:
      summary: Unsubscribe to user
      description: Method deletes subscription to user
      tags:
        - Subscriptions
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user to unsubscribe to
      responses:
        '200':
          description: Subscription deleted successfully
        '400':
          description: Bad Request
        '500':
          description: Server error

  /locations:
    get:
      summary: Search for locations
      tags:
        - Locations
      parameters:
        - in: query
          name: name
          schema:
            type: string
          description: Name of the location to search for
        - in: query
          name: page
          schema:
            type: integer
            default: 1
          description: Page number for pagination
        - in: query
          name: per_page
          schema:
            type: integer
            default: 10
          description: Number of items per page
      responses:
        '200':
          description: List of locations matching the search criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
        '400':
          description: Bad Request
        '500':
          description: Server error

  /locations/{location_id}/posts:
    get:
      summary: Get posts from a location
      tags:
        - Locations
      parameters:
        - in: path
          name: location_id
          schema:
            type: integer
          required: true
          description: ID of the location
      responses:
        '200':
          description: List of posts from the location
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        '400':
          description: Bad Request
        '500':
          description: Server error

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        profile_picture:
          type: string

    Post:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          type: integer
        location_id:
          type: integer
        title:
          type: string
        body:
          type: string
        photos:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time

    Rating:
      type: object
      properties:
        user_id:
          type: integer
        post_id:
          type: integer
        rating:
          type: integer
          minimum: 1
          maximum: 5

    Comment:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user_id:
          type: integer
        post_id:
          type: integer
        text:
          type: string
        created_at:
          type: string
          format: date-time

    Location:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        description:
          type: string
        latitude:
          type: number
          format: float
        longitude:
          type: number
          format: float
        photos:
          type: array
          items:
            type: string
